package message;

message ColorRequest {
	// priority to use when setting the color
	required int32 priority = 1;

	// integer value containing the rgb color (0x00RRGGBB)
	required int32 RgbColor = 2;

	// duration of the request (negative results in infinite)
	optional int32 duration = 3;
}

message ImageRequest {
	// priority to use when setting the image
	required int32 priority = 1;

	// width of the image
	required int32 imagewidth = 2;

	// height of the image
	required int32 imageheight = 3;

	// image data
	required bytes imagedata = 4;

	// duration of the request (negative results in infinite)
	optional int32 duration = 5;
}

message ClearRequest {
	// priority which need to be cleared
	required int32 priority = 1;
}

message HyperionRequest {
	enum Command {
		COLOR = 1;
		IMAGE = 2;
		CLEAR = 3;
		CLEARALL = 4;
	}

	// command specification
	required Command command = 1;

	optional ColorRequest colorRequest = 10;
	optional ImageRequest imageRequest = 11;
	optional ClearRequest clearRequest = 12;
}

message HyperionReply {
	enum Type {
		REPLY = 1;
		GRABBING = 2;
		VIDEO = 3;
	}
	
	// Identifies which field is filled in.
	required Type type = 1;
	
	// flag indication success or failure
	optional bool success = 2;

	// string indicating the reason for failure (if applicable)
	optional string error = 3;

	// XBMC Video Checker Proto Messages for Grabbing mode
	optional int32 grabbing = 4;
	
	// XBMC Video Checker Proto Messages for Video mode
	optional int32 video = 5;
}
