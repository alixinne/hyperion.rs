initSidebarItems({"constant":[["ENUM_MAX_COMMAND",""],["ENUM_MAX_IMAGE_TYPE",""],["ENUM_MIN_COMMAND",""],["ENUM_MIN_IMAGE_TYPE",""],["ENUM_VALUES_COMMAND",""],["ENUM_VALUES_IMAGE_TYPE",""]],"enum":[["ClearOffset",""],["ColorOffset",""],["ImageOffset",""],["RawImageOffset",""],["RegisterOffset",""],["ReplyOffset",""],["RequestOffset",""]],"fn":[["finish_reply_buffer",""],["finish_request_buffer",""],["finish_size_prefixed_reply_buffer",""],["finish_size_prefixed_request_buffer",""],["get_root_as_reply",""],["get_root_as_request",""],["get_size_prefixed_root_as_reply",""],["get_size_prefixed_root_as_request",""],["root_as_reply","Verifies that a buffer of bytes contains a `Reply` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_reply_unchecked`."],["root_as_reply_unchecked","Assumes, without verification, that a buffer of bytes contains a Reply and returns it."],["root_as_reply_with_opts","Verifies, with the given options, that a buffer of bytes contains a `Reply` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_reply_unchecked`."],["root_as_request","Verifies that a buffer of bytes contains a `Request` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_request_unchecked`."],["root_as_request_unchecked","Assumes, without verification, that a buffer of bytes contains a Request and returns it."],["root_as_request_with_opts","Verifies, with the given options, that a buffer of bytes contains a `Request` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_request_unchecked`."],["size_prefixed_root_as_reply","Verifies that a buffer of bytes contains a size prefixed `Reply` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `size_prefixed_root_as_reply_unchecked`."],["size_prefixed_root_as_reply_unchecked","Assumes, without verification, that a buffer of bytes contains a size prefixed Reply and returns it."],["size_prefixed_root_as_reply_with_opts","Verifies, with the given verifier options, that a buffer of bytes contains a size prefixed `Reply` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_reply_unchecked`."],["size_prefixed_root_as_request","Verifies that a buffer of bytes contains a size prefixed `Request` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `size_prefixed_root_as_request_unchecked`."],["size_prefixed_root_as_request_unchecked","Assumes, without verification, that a buffer of bytes contains a size prefixed Request and returns it."],["size_prefixed_root_as_request_with_opts","Verifies, with the given verifier options, that a buffer of bytes contains a size prefixed `Request` and returns it. Note that verification is still experimental and may not catch every error, or be maximally performant. For the previous, unchecked, behavior use `root_as_request_unchecked`."]],"mod":[["hyperion_reply_generated",""],["hyperion_request_generated",""]],"struct":[["Clear",""],["ClearArgs",""],["ClearBuilder",""],["Color",""],["ColorArgs",""],["ColorBuilder",""],["Command",""],["CommandUnionTableOffset",""],["Image",""],["ImageArgs",""],["ImageBuilder",""],["ImageType",""],["ImageTypeUnionTableOffset",""],["RawImage",""],["RawImageArgs",""],["RawImageBuilder",""],["Register",""],["RegisterArgs",""],["RegisterBuilder",""],["Reply",""],["ReplyArgs",""],["ReplyBuilder",""],["Request",""],["RequestArgs",""],["RequestBuilder",""]]});